name: CI

on:
- push:
  paths:
  - '*.rs'
  - 'Cargo.toml'
  - '.github/workflows/CI.yml'

jobs:
  check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable, 1.34.0]
    steps:
    - uses: hecrj/setup-rust-action@v1
      with:
        rust-version: ${{ matrix.rust }}
    - uses: actions/checkout@master
    - name: Check
      run: cargo check --all

  test:
    needs: check
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        rust: [stable, beta, nightly, 1.34.0]
    steps:
    - uses: hecrj/setup-rust-action@v1
      with:
        rust-version: ${{ matrix.rust }}
    - uses: actions/checkout@master
    - name: Build
      run: cargo build
    - name: Run tests
      run: cargo test --all

  features-stable:
    needs: check
    runs-on: ubuntu-latest
    steps:
    - uses: hecrj/setup-rust-action@v1
      with:
        rust-version: stable
    - uses: actions/checkout@master
    - name: "Test log support"
      run: (cd tracing/test-log-support && cargo test)
    - name: "Test static max level"
      run: (cd tracing/test_static_max_level_features && cargo test)
    - name: "Test tracing-core no-std support"
      run: (cd tracing-core && cargo test --no-default-features)
    - name: "Test tracing no-std support"
      run: (cd tracing && cargo test --no-default-features)
    - name: "Test tracing all features"
      run: cargo test -p tracing --all-features

  features-nightly:
    needs: check
    runs-on: ubuntu-latest
    steps:
    - uses: hecrj/setup-rust-action@v1
      with:
        rust-version: nightly
    - uses: actions/checkout@master
    - name: "Test tracing-futures std::future support"
      run: (cd tracing-futures/test_std_future && cargo test)
    - name: "Test tracing-attributes async/await support"
      run: (cd tracing/test_static_max_level_features && cargo test)
    - name: "Test tracing-core no-std support"
      run: (cd tracing-attributes/test_async_await && cargo test)
    - name: "Test nightly-only examples"
      run: (cd nightly-examples && cargo test)

  style:
    needs: check
    runs-on: ubuntu-latest
    steps:
    - uses: hecrj/setup-rust-action@v1
      with:
        rust-version: stable
    - uses: actions/checkout@master
    - name: rustfmt
      run: cargo fmt --all -- --check
